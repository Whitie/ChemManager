// Generated by CoffeeScript 1.11.1

/* ChemManager Coffee(Java)script function */
var add_bookmark, chem_format, load_inventory, load_limit, make_datatable, make_more_link;

add_bookmark = function(dlg_id, api_url) {
  var data, name, path;
  path = window.location.pathname;
  name = $('#bm_name').val();
  data = {
    'path': path,
    'name': name
  };
  UIkit.modal(dlg_id).hide();
  $.post(api_url, data, function(res) {
    $('#bookmarks').prepend(res);
  });
};

chem_format = function(elem) {
  var cursor, formula, in_hydro, in_sub, result, target;
  result = '';
  in_sub = false;
  in_hydro = false;
  cursor = 0;
  target = '';
  formula = elem.text();
  while (cursor < formula.length) {
    if (!isNaN(target = formula.charAt(cursor))) {
      target = '#';
    }
    switch (target) {
      case '#':
        if (in_sub === false && in_hydro === false) {
          result = result + "<sub>";
          in_sub = true;
        }
        if (in_hydro) {
          in_hydro = false;
        }
        result = "" + result + (formula.charAt(cursor));
        if (in_sub) {
          result = result + "</sub>";
          in_sub = false;
        }
        break;
      case ' ':
      case '.':
      case '-':
        result = "" + result + (formula.charAt(cursor));
        break;
      case 'Â·':
      case '*':
        in_hydro = true;
        if (in_sub) {
          result = result + "</sub>";
          in_sub = false;
        }
        result = "" + result + (formula.charAt(cursor));
        break;
      default:
        if (in_hydro) {
          in_hydro = false;
        }
        if (in_sub) {
          result = result + "</sub>";
          in_sub = false;
        }
        result = "" + result + (formula.charAt(cursor));
    }
    cursor++;
  }
  if (in_sub) {
    result = result + "</sub>";
  }
  elem.html(result);
};

make_datatable = function(elem, options) {
  var i18n, opts;
  i18n = {
    'sEmptyTable': gettext('No data available in table'),
    'sInfo': gettext('Showing _START_ to _END_ of _TOTAL_ entries'),
    'sInfoEmpty': gettext('Showing 0 to 0 of 0 entries'),
    'sInfoFiltered': gettext('(filtered from _MAX_ total entries)'),
    'sInfoPostFix': '',
    'sInfoThousands': gettext(','),
    'sLengthMenu': gettext('Show _MENU_ entries'),
    'sLoadingRecords': gettext('Loading...'),
    'sProcessing': gettext('Processing...'),
    'sSearch': gettext('Search:'),
    'sZeroRecords': gettext('No matching records found'),
    'oPaginate': {
      'sFirst': gettext('First'),
      'sLast': gettext('Last'),
      'sNext': gettext('Next'),
      'sPrevious': gettext('Previous')
    },
    'oAria': {
      'sSortAscending': gettext(': activate to sort column ascending'),
      'sSortDescending': gettext(': activate to sort column descending')
    }
  };
  opts = $.extend({
    'language': i18n
  }, options);
  elem.dataTable(opts);
};

make_more_link = function(options) {
  var opts;
  opts = $.extend({
    'show_char': 100,
    'ellipsestext': '...',
    'moretext': gettext(' Show more >'),
    'lesstext': gettext(' < Show less'),
    'duration': 500
  }, options);
  $('.more').each(function() {
    var c, content, h, html;
    content = $(this).html();
    if (content.length > opts['show_char']) {
      c = content.substr(0, opts['show_char']);
      h = content.substr(opts['show_char'], content.length - opts['show_char']);
      html = (c + "<span class='moreellipses'>" + opts['ellipsestext'] + "</span>") + ("<span class='morecontent'><span>" + h + "</span>") + ("<a href='' class='morelink'>" + opts['moretext'] + "</a></span>");
      $(this).html(html);
    }
  });
  $('.morelink').click(function() {
    if ($(this).hasClass('less')) {
      $(this).removeClass('less');
      $(this).html(opts['moretext']);
    } else {
      $(this).addClass('less');
      $(this).html(opts['lesstext']);
    }
    $(this).parent().prev().toggle(opts['duration']);
    $(this).prev().toggle(opts['duration']);
    return false;
  });
};

jQuery.fn.highlight = function(str) {
  var regex;
  regex = new RegExp(str, 'gi');
  return this.each(function() {
    $(this).contents().filter(function() {
      return this.nodeType === 3 && regex.test(this.nodeValue);
    }).replaceWith(function() {
      return (this.nodeValue || '').replace(regex, function(match) {
        return "<mark>" + match + "</mark>";
      });
    });
  });
};

load_inventory = function() {
  $('.storage-data').each(function() {
    var td, url;
    td = $(this);
    url = td.data('url');
    $.getJSON(url, function(data) {
      var cell;
      cell = ("<td class='uk-text-right'><a href='" + data['url'] + "'>") + (data['value'] + " " + data['unit'] + "</a></td>");
      td.replaceWith(cell);
    });
  });
};

load_limit = function() {
  $('.limit-data').each(function() {
    var td, url;
    td = $(this);
    url = td.data('url');
    $.get(url, function(data) {
      td.replaceWith(data);
    });
  });
};

$(document).ready(function() {
  var more_link_options;
  $('.formula').each(function(i) {
    var f;
    f = $(this);
    chem_format(f);
  });
  more_link_options = {
    'show_char': 160,
    'duration': 100
  };
  make_more_link(more_link_options);
});
